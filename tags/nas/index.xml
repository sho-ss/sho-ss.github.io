<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NAS on SHO SHIMOYAMA</title>
    <link>https://sho-ss.github.io/tags/nas/</link>
    <description>Recent content in NAS on SHO SHIMOYAMA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Mar 2019 13:05:19 +0900</lastBuildDate>
    
	<atom:link href="https://sho-ss.github.io/tags/nas/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Understanding and Simplifying One-Shot Architecture Search まとめ</title>
      <link>https://sho-ss.github.io/post/understand_oneshot/my-article-name/</link>
      <pubDate>Mon, 11 Mar 2019 13:05:19 +0900</pubDate>
      
      <guid>https://sho-ss.github.io/post/understand_oneshot/my-article-name/</guid>
      <description>はじめに 論文へのリンク
モチベーション one-shot architecture searchにおける重み共有について分析したい． 重み共有では構造間で重みを共有して学習を行うが， 様々な構造に対して同一の重み集合を利用してなぜ上手くいくのか．
概要 モデルはCNNを用いている． 探索空間内の操作を全て含んだone-shotモデルを学習する． これは，重み共有を用いた学習と同じである． ここで操作とは 1$\times$1conv や 3$\times$3conv，maxpool などである． 本項ではこれを large one-shot モデルと記す． 学習後の large one-shot モデルから操作のいくつかを取り除き，予測精度の変化を計測する．
以下の図のように操作を全て含んだモデルを学習する． 先行研究との差 MorphNetはフィルタサイズを対象としている． 一方，提案手法は操作の枝狩りやスキップコネクションに焦点を当てている．
データセット CIFAR-10とImageNetを使用．
結果 weight sharing の役割に対する洞察 構造をサンプリングして，large one-shot モデルから対応する構造を持つモデルを得る． このモデルを単に one-shot モデルと記す． サンプリングした構造を持つ，一から学習したモデルがstand-aloneモデル．
Figure5は，one-shot モデルと stand-alone モデルの精度の関係を表している． one-shot において精度の高い構造は一から学習しても精度が高くなっており，large one-shot は「構造の良さ」を学習できていると考えられる． また，one-shot における精度差と stand-alone における精度差から，large one-shot は精度への影響が大きい操作の欠落に対して敏感であると思われる．
この結果から，「重み共有は操作が性能に与える影響をモデルに識別させる役割がある」と仮定する．
上述の仮定を示すために，探索空間内のほぼ全ての操作が有効になっている構造 (参照構造) の予測分布と 一部の操作のみが有効になっている構造 (候補構造) の予測分布の間で symmetric KL-divergence を計測する． 論文ではクラス分類を対象としているためモデルの出力は確率分布とみなせる．
Figure6は，サンプリングした各構造の精度，それらの構造と参照構造との KL-divergence の関係を表している． 精度が高い構造の予測分布は参照構造の予測分布と近しくなることが確認できる． つまり，large one-shot モデルはどの操作が予測性能への影響が大きいかを学習していると考えることができる．</description>
    </item>
    
  </channel>
</rss>